class Solution(object):
    def wallsAndGates(self, rooms):
        """
        :type rooms: List[List[int]]
        :rtype: void Do not return anything, modify rooms in-place instead.
        """
        
        # Do DFS on 0 grids. Update empty rooms by `rooms[i][j] = min(rooms[i][j], depth)'
        if not rooms: return
        
        rowNum = len(rooms)
        colNum = len(rooms[0])
        visited = [[False]*colNum for row in range(rowNum)]

        def dfs(r, c, depth):
            if r < 0 or r >= rowNum or c < 0 or c >= colNum or visited[r][c] or rooms[r][c] < 2**30:
                return
            
            rooms[r][c] = min(rooms[r][c], depth)
            visited[r][c] = True
            depth += 1
            
            dfs(r+1, c, depth)
            dfs(r-1, c, depth)
            dfs(r, c+1, depth)
            dfs(r, c-1, depth)
            visited[r][c] = False

        for row in range(rowNum):
            for col in range(colNum):
                if rooms[row][col] == 0:
                    dfs(row, col, 0)

sol = Solution()
rooms = [[-1,0,0,-1,-1,-1,2147483647,0,0,2147483647,2147483647,0,2147483647,-1,2147483647,2147483647,0,2147483647,0,0,-1,0,-1,2147483647,0,0,-1,0,-1,-1,0,2147483647,-1,0,-1,2147483647,2147483647,2147483647,0,0,-1,-1,-1,-1,-1,2147483647],[2147483647,-1,-1,0,2147483647,0,-1,-1,-1,2147483647,-1,2147483647,0,2147483647,0,2147483647,-1,0,2147483647,2147483647,0,-1,2147483647,2147483647,0,2147483647,0,2147483647,-1,-1,2147483647,-1,-1,2147483647,-1,0,-1,-1,0,0,-1,2147483647,0,2147483647,0,0],[2147483647,2147483647,2147483647,2147483647,0,-1,2147483647,0,-1,2147483647,2147483647,2147483647,0,-1,0,-1,-1,2147483647,-1,0,2147483647,-1,-1,0,-1,-1,-1,2147483647,2147483647,0,0,2147483647,0,2147483647,2147483647,0,0,0,2147483647,2147483647,2147483647,0,2147483647,2147483647,0,0],[0,-1,0,2147483647,-1,0,0,2147483647,-1,-1,-1,0,2147483647,2147483647,0,2147483647,-1,-1,0,-1,0,0,0,-1,2147483647,2147483647,0,-1,-1,2147483647,-1,-1,2147483647,0,-1,0,-1,-1,-1,-1,2147483647,0,2147483647,0,-1,-1],[2147483647,0,-1,-1,2147483647,-1,-1,-1,2147483647,0,-1,0,0,0,2147483647,0,2147483647,0,0,-1,-1,0,-1,-1,0,-1,-1,2147483647,-1,0,-1,0,2147483647,-1,0,2147483647,2147483647,-1,0,0,2147483647,0,2147483647,2147483647,-1,0]]
sol.wallsAndGates(rooms)
print rooms